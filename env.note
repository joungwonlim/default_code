Node
npm init -y es6

"dev": "nodemon --experimental-modules --es-module-specifier-resolution=node src/index.js",

-------------------------------------------
.env

PORT=7003
DB_URL=mongodb+srv://joungwonlim:wonwonwon@cluster0.ujodo4g.mongodb.net/?retryWrites=true&w=majority

-------------------------------------------
middlewares.js

function notFound(req, res, next) {
  res.status(404);
  const error = new Error(`🔍 - Not Found - ${req.originalUrl}`);
  next(error);
}

/* eslint-disable no-unused-vars */
function errorHandler(err, req, res, next) {
  /* eslint-enable no-unused-vars */
  const statusCode = res.statusCode !== 200 ? res.statusCode : 500;
  res.status(statusCode);
  res.json({
    message: err.message,
    stack: process.env.NODE_ENV === 'production' ? '🥞' : err.stack,
  });
}

export default {
  notFound,
  errorHandler,
};

-------------------------------------------
verifyToken.js
import jwt from 'jsonwebtoken';

function verifyToken(req, res, next) {
  const token = req.header('auth-token');
  if (!token) return res.json('Access Denied');

  try {
    const verified = jwt.verify(token, process.env.TOKEN_SECRET);
    req.user = verified;
    next();
  } catch (error) {
    next(error);
  }
}

export default verifyToken;

-------------------------------------------
mongoose
mongoose.connect("process.env.DB_URL",
{
    useNewUrlParser: true,
})

-------------------------------------------
Prettier + ESLint + Airbnb Style Guide

시작하기#

설치#
1. eslint, prettier 패키지 설치
npm install -D eslint prettier

2. airbnb eslint 설정 패키지 설치
npx install-peerdeps --dev eslint-config-airbnb

3. prettier eslint 플러그인 및 설정 패키지 설치
npm install -D eslint-config-prettier eslint-plugin-prettier

* eslint-plugin-prettier: prettier 규칙을 생성하는 eslint 플러그인
* eslint-config-prettier: eslint와 prettier간 충돌나는 규칙을 비활성화해주는 eslint 설정


설정 파일 작성#
-------------------------------------------
.eslintrc#
{
  "extends": ["airbnb", "plugin:prettier/recommended"],
  "rules": {
    "prettier/prettier": ["error"]
  }
}
Copy
* 위치: 현재 작업 디렉터리부터 설정파일을 찾고, 못 찾았을 경우 상위 폴더를 한 단계씩 검색한다.
* eslint 설정 옵션
* eslint 규칙 목록
-------------------------------------------
.prettierrc.js#
/**
 * Prettier 옵션
 * - https://prettier.io/docs/en/options.html
 */
module.exports = {
  printWidth: 80, // 한 줄 최대 문자 수
  tabWidth: 2, // 들여쓰기 시, 탭 너비
  useTabs: false, // 스페이스 대신 탭 사용
  semi: true, // 문장 끝 세미콜론 사용
  singleQuote: true, // 작은 따옴표 사용
  trailingComma: 'all', // 꼬리 콤마 사용
  bracketSpacing: true, // 중괄호 내에 공백 사용
  arrowParens: 'avoid', // 화살표 함수 단일 인자 시, 괄호 생략
  proseWrap: 'never', // 마크다운 포매팅 제외
  endOfLine: 'auto', // 개행문자 유지 (혼합일 경우, 첫 줄 개행문자로 통일)
};

	printWidth: 80, // 한 줄 최대 문자 수
        tabWidth: 2, // 들여쓰기 시, 탭 너비
        useTabs: false, // 스페이스 대신 탭 사용
        semi: true, // 문장 끝 세미콜론 사용
        singleQuote: true, // 작은 따옴표 사용
        trailingComma: 'all', // 꼬리 콤마 사용
        bracketSpacing: true, // 중괄호 내에 공백 사용
        arrowParens: 'avoid', // 화살표 함수 단일 인자 시, 괄호 생략
        proseWrap: 'never', // 마크다운 포매팅 제외
        endOfLine: 'auto', // 개행문자 유지 (혼합일 경우, 첫 줄 개행문자로 통일)

-------------------------------------------
vue

- <template>  : typeScript error [jsconfig.js] - 추가 

"jsx": "preserve"

-------------------------------------------
form submit (return false)
event.preventDefault();

-------------------------------------------
Font Awesome
<script src="https://kit.fontawesome.com/4244998410.js" crossorigin="anonymous"></script>



-------------------------------------------
import eslint error(first line)
vscode - .json

  // eslint first lint import
  "eslint.workingDirectories": [{ "mode": "auto" }],


-------------------------------------------
console.log eslint error(first line)
 rules: {
    // allow console and debugger in development
    'no-console': process.env.NODE_ENV === 'production' ? 2 : 0,
    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,
  },


-------------------------------------------
tailwindcss
npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
npx tailwindcss init -p

// tailwind.config.js
module.exports = {
  purge: ['./index.html', './src/**/*.{vue,js,ts,jsx,tsx}'],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}

mkdir src/styles && touch src/styles/app.css

/* ./src/styles/app.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

//main.js
import './styles/app.css'; // Here


-------------------------------------------
git
1. git init
2. git remote add origin https://git…
3. git add .
4. git commit -m ‘first init’
5. git push origin master

